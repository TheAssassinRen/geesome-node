services:
  web:
    container_name: geesome
    build: .
    command: npm run in-docker-start
    restart: always
    ports:
      - 2052
      - 2082
    depends_on:
      - ipfs
      - postgres
    volumes:
      - "${GEESOME_DATA}:/geesome-node/data"
      - "${GEESOME_FRONTEND_DIST}:/geesome-node/frontend/docker-dist"
    environment:
      - IPFS_PROFILE
      - DEBUG
      - SSG_RUNTIME
      - DATABASE_USER=geesome
      - DATABASE_PASSWORD=geesome
      - DATABASE_NAME=geesome_node
      - DATABASE_HOST=geesome_db
      - DATABASE_PORT=5432

  postgres:
    container_name: geesome_db
    image: postgres:14-alpine
    restart: always
    expose:
      - 5432
    volumes:
      - "${POSTGRES_DATA}:/var/lib/postgresql/data"
    environment:
      - POSTGRES_PASSWORD=geesome
      - POSTGRES_USER=geesome
      - POSTGRES_DB=geesome_node

  client:
    image: nginx
    ports:
      - "127.0.0.1:2042:80"
    volumes:
      - "${GEESOME_FRONTEND_DIST}:/usr/share/nginx/html"

  ipfs:
    container_name: go_ipfs
    image: "ipfs/kubo:v0.21.0"
    restart: always
    environment:
      - IPFS_PROFILE
    expose:
      - 5001
    ports:
      - 4001
      - 8080
    volumes:
      - "${STORAGE_STAGING}:/export"
      - "${STORAGE_DATA}:/data/ipfs"